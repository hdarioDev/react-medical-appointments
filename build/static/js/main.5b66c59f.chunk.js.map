{"version":3,"sources":["components/Formulario.js","components/Cita.js","App.js","index.js"],"names":["Formulario","createCita","useState","mascota","propietario","fecha","hora","sintomas","cita","setCita","error","seterror","handleState","e","console","log","target","value","name","Fragment","className","onSubmit","preventDefault","trim","id","uuid","type","placeholder","onChange","Cita","deleteCita","onClick","App","initialcitas","JSON","parse","localStorage","getItem","citas","setcitas","useEffect","setItem","stringify","newCitas","filter","titleCitas","length","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b66c59f.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { v4 as uuid } from 'uuid'\n\n\nfunction Formulario({ createCita }) {\n    const [cita, setCita] = useState({\n        mascota: '',\n        propietario: '',\n        fecha: '',\n        hora: '',\n        sintomas: ''\n    })\n    const [error, seterror] = useState(false)\n    const handleState = (e) => {\n        console.log(e.target.value);\n        //spred operator\n        setCita({\n            ...cita,\n            [e.target.name]: e.target.value\n        })\n\n    }\n    //des estructuring\n    const {\n        mascota,\n        propietario,\n        fecha,\n        hora,\n        sintomas\n    } = cita\n\n    const submitAppointment = e => {\n        e.preventDefault()\n        /** Detener submit */\n        console.log(\"Sending...\");\n        //validaciones\n        console.log(\"mascota \", mascota)\n        console.log(\"propietario \", propietario)\n        console.log(\"fecha \", fecha)\n        console.log(\"hora \", hora)\n        console.log(\"sintomas \", sintomas)\n        if (\n            mascota.trim() === '' ||\n            propietario.trim() === '' ||\n            fecha.trim() === '' ||\n            hora.trim() === '' ||\n            sintomas.trim() === ''\n        ) {\n            seterror(true)\n            console.log(\"Complete los campos\")\n            return;\n\n        }\n        seterror(false)\n        cita.id = uuid()\n        //CREA CITA\n        createCita(cita)\n        //REINICIA FORM\n        setCita({\n            mascota: '',\n            propietario: '',\n            fecha: '',\n            hora: '',\n            sintomas: ''\n        })\n    }\n\n\n\n\n    return (\n        <React.Fragment>\n            <h2>Crear Cita</h2>\n            {error ? <p className='err-sms'>Completa todos los campos.</p> : null}\n            <form className='container--form-items' onSubmit={submitAppointment}>\n                <div className='form-items-group'>\n                    {/* <label>Nombre mascota</label> */}\n                    <input\n                        type=\"text\"\n                        name=\"mascota\"\n                        value={mascota}\n                        placeholder='Nombre mascota'\n                        onChange={handleState}\n                    /><span className='items-group-bar'></span>\n                </div>\n                <div className='form-items-group'>\n                    {/* <label>Nombre propietario</label> */}\n                    <input\n                        type=\"text\"\n                        name=\"propietario\"\n                        value={propietario}\n                        placeholder='Nombre propietario'\n                        onChange={handleState}\n                    /><span className='items-group-bar'></span>\n                </div>\n                <div className='form-items-group'>\n\n                    {/* <label>Fecha</label> */}\n                    <input\n                        type=\"date\"\n                        name=\"fecha\"\n                        value={fecha}\n                        placeholder=''\n                        onChange={handleState}\n                    /><span className='items-group-bar'></span>\n                </div>\n                <div className='form-items-group'>\n                    {/* <label>Hora</label> */}\n                    <input\n                        type=\"time\"\n                        name=\"hora\"\n                        value={hora}\n                        placeholder=''\n                        onChange={handleState}\n                    /><span className='items-group-bar'></span>\n                </div>\n                <div className='form-items-group'>\n                    {/* <label>SÃ­ntomas</label> */}\n                    <textarea\n                        placeholder='Sintomas'\n                        name=\"sintomas\"\n                        value={sintomas}\n                        onChange={handleState}\n                    >\n\n                    </textarea><span className='items-group-bar'></span>\n                </div>\n\n                <button type='submit'>Agregar cita</button>\n            </form >\n        </React.Fragment >\n    )\n}\n\n\nexport default Formulario\n","import React, { Fragment } from 'react'\n\nfunction Cita({ cita, deleteCita }) {\n    console.log(\"cita nivel cita \", cita)\n    return (\n        <Fragment>\n            <div className='container-cita'>\n                <p>Mascota: <span>{cita.mascota}</span></p>\n                <p>propietario: <span>{cita.propietario}</span></p>\n                <p>fecha: <span>{cita.fecha}</span></p>\n                <p>hora: <span>{cita.hora}</span></p>\n                <p>sintomas: <span>{cita.sintomas}</span></p>\n                <button className='button button-delete' onClick={() => deleteCita(cita.id)}>X</button>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Cita\n","import React, { Fragment, useState, useEffect } from 'react'\nimport Formulario from './components/Formulario';\nimport Cita from './components/Cita';\nimport './index.css'\n\nfunction App() {\n  //citas en localstorage\n  let initialcitas = JSON.parse(localStorage.getItem('citas'))\n  if (!initialcitas) {\n    initialcitas = [];\n  }\n\n  const [citas, setcitas] = useState(initialcitas)\n\n  //operaciones segun el estado\n  useEffect(() => {\n    console.log(\"algo paso \")\n\n    if (initialcitas) {\n      localStorage.setItem('citas', JSON.stringify(citas))\n    } else {\n      localStorage.setItem('citas', JSON.stringify([]))\n    }\n\n  }, [citas, initialcitas])//si la cita cambia pues llama este evento nuevamente\n\n  //Funcion que toma las citas actuales y agrege la nueva\n  const crearCita = cita => {\n    console.log(\"cita recibida \", cita)\n    setcitas([\n      ...citas,\n      cita\n    ])\n    console.log(\"citas en memoria \", citas)\n  }\n\n  //eliminar cita\n  const deleteCita = id => {\n    console.log(\"delete..\")\n    const newCitas = citas.filter(cita => cita.id !== id)\n    setcitas(newCitas)\n  }\n  //contar citas para sms \n  const titleCitas = citas.length === 0 ? 'Sin registros' : 'Tus citas'\n\n  return (\n    <Fragment>\n      <div className=\"container--title\">\n        <span className='title--icon'></span>\n        <h1>Citas Medicas</h1>\n      </div>\n      <div className='container'>\n        <div className='container--form'>\n          <Formulario\n            createCita={crearCita}\n          />\n        </div>\n        <div className='container--list'>\n          <h2>{titleCitas}</h2>\n          {citas.map(cita => (\n            <Cita\n              key={cita.id}\n              cita={cita}\n              deleteCita={deleteCita}\n            />\n          ))}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}